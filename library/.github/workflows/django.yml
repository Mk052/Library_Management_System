name: "CI - Lint, Test & Coverage"

on: [push, pull_request]

jobs:
  black:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - run: pip install black~=23.0
    - run: black .

  flake8:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - run: pip install flake8
    - run: flake8 .

  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install coverage

    - name: Run Django tests with coverage
      run: |
        coverage run manage.py test
        coverage report
        coverage html

    - name: Upload HTML coverage report
      uses: actions/upload-artifact@main
      with:
        name: coverage-html-report
        path: htmlcov

# name: Django CI

# on:
#   push:
#     branches: [ main ]
#   pull_request:
#     branches: [ main ]

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     services:
#       postgres:
#         image: postgres:13
#         env:
#           POSTGRES_DB: test_db
#           POSTGRES_USER: test_user
#           POSTGRES_PASSWORD: test_pass
#         ports:
#           - 5432:5432
#         options: >-
#           --health-cmd pg_isready
#           --health-interval 10s
#           --health-timeout 5s
#           --health-retries 5

#     env:
#       DB_NAME: test_db
#       DB_USER: test_user
#       DB_PASSWORD: test_pass
#       DB_HOST: 127.0.0.1
#       DB_PORT: 5432
#       SECRET_KEY: dummy-secret-key

#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v3

#     - name: Set up Python
#       uses: actions/setup-python@v4
#       with:
#         python-version: 3.10

#     - name: Install dependencies
#       run: |
#         python -m pip install --upgrade pip
#         pip install -r requirements.txt

#     - name: Run migrations
#       run: |
#         python manage.py migrate

#     - name: Run tests
#       run: |
#         python manage.py test
